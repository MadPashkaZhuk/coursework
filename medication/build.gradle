plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'jacoco'
}

group = 'com.zhuk'
version = '1.0'

java {
	sourceCompatibility = '17'
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-aop'

	implementation 'org.postgresql:postgresql'
	implementation 'org.liquibase:liquibase-core:4.24.0'
	implementation 'com.fasterxml.jackson.core:jackson-core:2.16.0-rc1'
	implementation 'com.fasterxml.jackson.core:jackson-annotations:2.16.0-rc1'
	implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.0-rc1'
	implementation 'org.mapstruct:mapstruct:1.5.5.Final'
	implementation 'com.google.code.findbugs:jsr305:3.0.2'
	implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'
	implementation 'org.springframework.boot:spring-boot-testcontainers'

	compileOnly 'org.projectlombok:lombok'

	annotationProcessor("org.projectlombok:lombok")
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
	annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	testImplementation 'org.junit.jupiter:junit-jupiter'
	testImplementation 'org.testcontainers:testcontainers'
	testImplementation 'org.testcontainers:postgresql'
	testImplementation 'org.testcontainers:junit-jupiter:1.19.1'
}

tasks.named('test') {
	useJUnitPlatform()
}

jacoco {
	toolVersion = '0.8.9'
	reportsDirectory = layout.buildDirectory.dir('customJacocoReportDir')
}

test {
	finalizedBy jacocoTestReport
}

jacocoTestReport {
	dependsOn test

	reports {
		xml.required = false
		csv.required = false
		html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
	}

	afterEvaluate {
		classDirectories.setFrom(files(classDirectories.files.collect {
			fileTree(dir: it, exclude: [
					"com/zhuk/coursework/mapper/*",
					"com/zhuk/coursework/CourseworkApplication.class"
			])
		}))
	}
}
